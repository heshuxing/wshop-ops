import com.cloudbees.groovy.cps.NonCPS

String packages_path = "/opt/wshop/wshop-0.0.1/images"
String shell_path = "/opt/wshop/wshop-0.0.1/bin"
@NonCPS
def getBuildUser() {
    return currentBuild.rawBuild.getCause(Cause.UserIdCause).getUserId()
}

pipeline {
    agent any
    parameters {
        choice(name: "ENV", choices: ["prod"], description: "请选择升级环境名，默认为 prod")
        choice(name: "MODULE", choices: ["wshop-core"], description: "请选择要升级的模块")
        string(name: "BRANCH", defaultValue: "develop", description: "请填写升级分支名, 默认为 develop", trim: true)
    }
    options {
        timeout(time: 100, unit: "MINUTES")
    }
    stages {
        stage("Entering directory") {
            steps {
                script {
                    dir("jenkins-workspace/deploy-backend") {
                        stage("Create build directory") {
                            if (params.ENV.equals("prod")) {
                                remotes = [
                                        [name: "test", host: "172.24.3.82", port: 3222, user: "lowcode", allowAnyHosts: true]
                                ]
                            }
                            else {
                                error "Unknown ${ENV}!"
                            }
                            sh "mkdir wshop-core || true"
                        }
                        stage("Checkout service") {
                            checkout([$class: "GitSCM", branches: [[name: "*/${BRANCH}"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: "623294f4-b267-4ddf-a76a-831c04951e43", url: "https://github.com/heshuxing/wshop-service.git"]]])
                        }
                    }
                    dir("jenkins-workspace/deploy-backend/wshop-core") {
                        stage("mvn package") {
                            if (params.MODULE.equals("wshop-core")) {
                                sh "mvn clean package || exit 1"
                            }
                            else {
                                error "Unknow ${MODULE}"
                            }
                        }
                        stage("get version") {
                            CORE_TAG = sh(returnStdout: true, script: "IFS='-' read -ra ADDR <<< \$(basename target/*.tar.gz .tar.gz); echo \${ADDR[-1]}").trim()
                            sh "echo ${CORE_TAG}"
                        }
                    }
                }
            }
        }
    }
}